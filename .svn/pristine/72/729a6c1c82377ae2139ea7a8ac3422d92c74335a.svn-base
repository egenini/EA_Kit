using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace UIResources
{
    public partial class Alert : Form
    {
        public Alert( string mensaje, AlertType type)
        {
            InitializeComponent();

            this.message.Text = mensaje;

            switch (type) {

                case AlertType.info:
                    this.BackColor = Color.FromArgb(204, 229, 255);
                    this.pictureBox1.Image = imageList1.Images[0];
                    // cambiar la imagen que se muestra
                    break;
                case AlertType.success:
                    this.BackColor = Color.FromArgb(212, 237, 218);
                    this.pictureBox1.Image = imageList1.Images[1];
                    break;
                case AlertType.warning:
                    this.BackColor = Color.FromArgb(255, 243, 205);
                    this.pictureBox1.Image = imageList1.Images[2];
                    break;
                case AlertType.error:
                    this.BackColor = Color.FromArgb(248, 215, 218);
                    this.pictureBox1.Image = imageList1.Images[3];
                    break;

            }
        }

        public static void Info(string mensaje)
        {
            new Alert(mensaje, AlertType.info).Show();
        }
        public static Alert InfoInstance(string mensaje )
        {
            return new Alert(mensaje, AlertType.info);
        }

        public static void Success(string mensaje)
        {
           new Alert(mensaje, AlertType.success).Show();
        }

        public static Alert SuccessInstance(string mensaje)
        {
            return new Alert(mensaje, AlertType.success);
        }
        public static void Warning(string mensaje)
        {
            new Alert(mensaje, AlertType.warning).Show();
        }
        public static Alert WarningInstance(string mensaje)
        {
            return new Alert(mensaje, AlertType.warning);
        }
        public static void Error(string mensaje)
        {
            new Alert(mensaje, AlertType.error).Show();
        }
        public static Alert ErrorInstance(string mensaje)
        {
            return new Alert(mensaje, AlertType.error);
        }

        private void button1_Click(object sender, EventArgs e)
        {
            closeAlert.Start();
        }

        public enum AlertType
        {
            info, success, error, warning
        }

        private void Alert_Load(object sender, EventArgs e)
        {
            //this.Top = Screen.PrimaryScreen.Bounds.Height - this.Height - 100;
            this.Top = -1 * (this.Height);
            this.Left = Screen.PrimaryScreen.Bounds.Width - this.Width - 60;

            show.Start();
        }

        private void timeout_Tick(object sender, EventArgs e)
        {
            this.closeAlert.Start();
        }

        int interval = 0;

        private void show_Tick(object sender, EventArgs e)
        {
            if( this.Top < 60)
            {
                this.Top += interval;
                interval += 2;
            }
            else
            {
                show.Stop();
            }
        }

        private void close_Tick(object sender, EventArgs e)
        {
            if( this.Opacity > 0)
            {
                this.Opacity -= 0.1;
            }
            else
            {
                this.Close();
            }
        }
    }
}
